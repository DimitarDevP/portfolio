{"version":3,"sources":["Components/Nav/Nav.js","Components/About/About.js","Components/Experience/Experience.js","Components/Education/Education.js","Components/Global/ContentCard.js","Components/Skills/Skills.js","Components/Projects/Projects.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","to","About","src","Experience","Education","ContentCard","props","title","description","Skills","skillCards","map","skill","Projects","projectCards","project","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uXAKe,SAASA,IACpB,OACI,yBAAKC,UAAU,OACX,kBAAC,IAAD,CAASC,GAAG,KAAZ,YACA,kBAAC,IAAD,CAASA,GAAG,WAAZ,aACA,kBAAC,IAAD,CAASA,GAAG,aAAZ,YACA,kBAAC,IAAD,CAASA,GAAG,eAAZ,cACA,kBAAC,IAAD,CAASA,GAAG,cAAZ,c,YCRG,SAASC,IACpB,OACI,yBAAKF,UAAU,mBACX,yBAAKG,IAAI,iBACT,sDACA,4LAIA,kTAKA,uPAIA,+fCnBG,SAASC,IACpB,OACI,yBAAKJ,UAAU,wBACX,yDACA,6DACA,+DACA,8WAMA,kDACA,4CACA,kEACA,6cChBG,SAASK,IACpB,OACI,yBAAKL,UAAU,uBACX,2CACA,uLACA,wDACA,wS,MCJG,SAASM,EAAYC,GAChC,OACI,yBAAKP,UAAU,eACX,4BAAKO,EAAMC,OACX,2BAAID,EAAME,c,MCHP,SAASC,IAEpB,IAWMC,EAXS,CACX,CAACH,MAAO,aAAcC,YAAa,yMACnC,CAACD,MAAO,WAAYC,YAAa,yOACjC,CAACD,MAAO,MAAOC,YAAa,iIAC5B,CAACD,MAAO,SAAUC,YAAa,2JAC/B,CAACD,MAAO,MAAOC,YAAa,qIAC5B,CAACD,MAAO,OAAQC,YAAa,iJAC7B,CAACD,MAAO,SAAUC,YAAa,6HAC/B,CAACD,MAAO,QAASC,YAAa,yHAGRG,KAAI,SAAAC,GAC1B,OAAQ,kBAAC,EAAD,CAAaL,MAAOK,EAAML,MAAOC,YAAaI,EAAMJ,iBAGhE,OACI,yBAAKT,UAAU,oBACVW,G,MCnBE,SAASG,IAEpB,IAMMC,EANW,CACb,CAACP,MAAO,aAAcC,YAAa,ygBACnC,CAACD,MAAO,mBAAoBC,YAAa,gSACzC,CAACD,MAAO,WAAYC,YAAa,yTAGPG,KAAI,SAAAI,GAC9B,OAAQ,kBAAC,EAAD,CAAaR,MAAOQ,EAAQR,MAAOC,YAAaO,EAAQP,iBAGpE,OACI,yBAAKT,UAAU,sBACVe,G,MCYEE,MAff,WACC,OACC,yBAAKjB,UAAU,OACd,kBAAC,IAAD,KACC,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAOkB,OAAK,EAACC,KAAK,IAAIC,UAAWlB,IACjC,kBAAC,IAAD,CAAOiB,KAAK,UAAUC,UAAWV,IACjC,kBAAC,IAAD,CAAOS,KAAK,YAAYC,UAAWN,IACnC,kBAAC,IAAD,CAAOK,KAAK,cAAcC,UAAWhB,IACrC,kBAAC,IAAD,CAAOe,KAAK,aAAaC,UAAWf,OCbpBgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7ad84729.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\nimport \"./Nav.css\"\n\nexport default function Nav() {\n    return (\n        <div className=\"Nav\">\n            <NavLink to=\"/\">ABOUT ME</NavLink>\n            <NavLink to=\"/skills\">SKILL SET</NavLink>\n            <NavLink to=\"/projects\">PROJECTS</NavLink>\n            <NavLink to=\"/experience\">EXPERIENCE</NavLink>\n            <NavLink to=\"/education\">EDUCATION</NavLink>\n        </div>\n    )\n}\n","import React from 'react'\nimport '../Global/Container.css'\nimport \"./About.css\"\n\nexport default function About() {\n    return (\n        <div className=\"About Container\">\n            <img src=\"/Profile.jpg\" />\n            <h3>Personal Information: </h3>\n            <p>\n                My name is Dimitar Veljanovski and I am a self thought software engineer. I first started coding when I was 12 years old \n                and it's been my passion ever since.\n            </p>\n            <p>\n                My favorite language is Python because of it's clean and straight foreward syntax\n                which is beginner friendly and readable. Furthermore, the language has a huge community around it. The language I have worked\n                with the most is JavaScript and it is one of my favorite languages.\n            </p>\n            <p>\n                I am an active user of Social Media. The platforms I am most active on are Quora and Twitter. I use Quora mainly to help out \n                other developers/engineers and to ask questions if I am stuck or in need of help or advise. \n            </p>\n            <p>\n                When taking on a more complex project I like to spend a few days planning to avoid any complications later on. If I am working \n                on a web application, I like to create a diagram of all the components I will need to create, write a list of all the routes and requests \n                my REST api will need to handle, design connect and normalize my database, create sketches for the design I am planning to use \n                and define all the colors, fonts, and screen sizes I am planning to use in development.\n            </p>\n        </div>\n    )\n}\n","import React from 'react'\nimport '../Global/Container.css'\n\nexport default function Experience() {\n    return (\n        <div className=\"Experience Container\">\n            <h3>Computer Vision Developer</h3>\n            <h4>Company: Tradiebot Industries</h4>\n            <h4>Duratuon: August 2019 - Present</h4>\n            <p>\n                I am currently working for a VR/AR company called Tradiebot Industries where I hold the position of a Junior Computer Vision\n                Developer. During my employment in this comapny so far, I have mostly worked with OpenCV on both Python and C++. I have also\n                worked with Android Studio, Arduino and I am currently working with the Godot Engine.\n            </p>\n\n            <h3>Browser Automation</h3>\n            <h4>Company: TBN</h4>\n            <h4>Duratuon: October 2018 - July 2019</h4>\n            <p>\n                TBN was not an official company. It was a group of developers who had creative ideas and tried to bring those ideas to life \n                and generate passive income from the applications they collectively develop.\n                The team I was on was was mainly focusing browser automation. My task was to develop a bot in Python using\n                the Selenium framework. The team was disbanded in July of 2019 due to lack of motivation and resources among the members.\n            </p>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport default function Education() {\n    return (\n        <div className=\"Education Container\">\n            <h3>High School</h3>\n            <h4>Institution: СОТУ \"Ѓорѓи Наумов\" – Битола</h4>\n            <h4>Duration: 2016 - Present</h4>\n            <p>\n                СОТУ \"Ѓорѓи Наумов\" is a public High School in Macedonia which is focused on teaching the students the STEM field. It is centered around\n                Electrical and Software engineering and Mathematics. \n            </p>\n        </div>\n    )\n}\n","import React from 'react'\n\nimport './ContentCard.css'\n\nexport default function ContentCard(props) {\n    return (\n        <div className=\"ContentCard\">\n            <h3>{props.title}</h3>\n            <p>{props.description}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport ContentCard from '../Global/ContentCard'\n\nimport './Skills.css'\n\nexport default function Skills() {\n\n    const skills = [\n        {title: \"JavaScript\", description: \"I've been actively working with JavaScript for over 3 years now and have gained quite a bit of experience. From those 3 years, I spent 2 years writing vanilla JavaScript and 1 year writing ReactJS.\"},\n        {title: \"React JS\", description: \"I have 1 year of active experience with ReactJS. I am fairly familiar with the framework and able to work with it. I do not posses a lot of experience regarding global state managment, but I posses theoretical knowledge of Redux.\"},\n        {title: \"PHP\", description: \"I have basic understanding of the language and used it to build RESTful APIs when I was starting out with backend development\"},\n        {title: \"Python\", description: \"I have 2 years of experience with Python. The 3 main areas where I applied Python was Computer Vision, development of REST APIs and Browser Automation.\"},\n        {title: \"C++\", description: \"C++ was the first language I learnt. I posses an intermediate knowledge of the language and have applied it in OpenCV and OpenGL.\"},\n        {title: \"Java\", description: \"I have minimal understanding of Java. I used the language to obtain data from mobile sensors and display it on the screen of a mobile device.\"},\n        {title: \"Pascal\", description: \"I have basic understanding of Pascal and it's framework Delphi. I have created a few basic desktop applications using it.\"},\n        {title: \"MySQL\", description: \"I have an intermediate level of understanding MySQL. I am able to design databases, link tables and execute queries.\"}\n    ]\n\n    const skillCards = skills.map(skill => {\n        return (<ContentCard title={skill.title} description={skill.description} />)\n    })\n\n    return (\n        <div className=\"Skills Container\">\n            {skillCards}\n        </div>\n    )\n}\n","import React from 'react'\nimport ContentCard from '../Global/ContentCard'\n\nimport './Projects.css'\n\nexport default function Projects() {\n\n    const projects = [\n        {title: \"ThinkSmart\", description: \"A web application I developed using JavaScript (ReactJS), PHP, MySQL and Firebase. It is an online platform where the user can sign up as an instructor or a student. Instructors have the ability to post video courses involving Programming while students have access to all those courses. The platform also had a built in voice controll tool to assist with navigation. Plus there is a StackOverflow-like feature called Smart Support where users can post questions regarding Programming and other users can answer them.\"},\n        {title: \"Bing Rewards Bot\", description: \"A web crawler designed to automatically log in to microsoft accounts and search random content on Bing in order to generate points. I developed it using the framework Selenium in Python. It is a robust solution that handles login, account unlocking, proxy changing and capcha passing.\"},\n        {title: \"FLaskSQL\", description: \"A Python API I have developed to make connecting to a database as easy as calling a single function, and performing CRUD operations as soon as calling a function and passing in a query string and query paramaters. The API is designed to remove repetitive code while developing RESTful APIs in FLask (Python).\"}\n    ]\n\n    const projectCards = projects.map(project => {\n        return (<ContentCard title={project.title} description={project.description} />)\n    })\n\n    return (\n        <div className=\"Projects Container\">\n            {projectCards}\n        </div>\n    )\n}\n","// Dependencies \nimport React from 'react'\nimport { BrowserRouter, Route } from \"react-router-dom\"\n\n// Components\nimport Nav from \"./Components/Nav/Nav\"\nimport About from './Components/About/About'\nimport Experience from './Components/Experience/Experience'\nimport Education from './Components/Education/Education'\nimport Skills from './Components/Skills/Skills'\nimport Projects from './Components/Projects/Projects'\n\n// Style\nimport './App.css'\n\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<BrowserRouter>\n\t\t\t\t<Nav />\n\t\t\t\t<Route exact path=\"/\" component={About} />\n\t\t\t\t<Route path=\"/skills\" component={Skills} />\n\t\t\t\t<Route path=\"/projects\" component={Projects} />\n\t\t\t\t<Route path=\"/experience\" component={Experience} />\n\t\t\t\t<Route path=\"/education\" component={Education} />\n\t\t\t</BrowserRouter>\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\nserviceWorker.unregister()\n"],"sourceRoot":""}